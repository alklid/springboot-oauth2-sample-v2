buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        // CI 로 사용하는 QBuild 에서 아래 문자열을 치환하기 때문에 CI 호환을 위해 유지
        serverVersion = '0.0.0.9'
        profile = 'local'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.medit.meditlink'
version = "${serverVersion}-${ENVIRONMENT}"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


sourceSets {
    if (!project.hasProperty('ENVIRONMENT') || !ENVIRONMENT) {
        ext.ENVIRONMENT = 'local'
    }

    generated {
        java {
            srcDirs =  ["src/main/generated"]
        }
    }

    main {
        java { srcDirs "src/main/java" }
        resources {
            srcDirs "src/main/resources", "src/main/resources-env/${ENVIRONMENT}"
        }
    }
}

processResources {
    filesMatching([
            'application.yml',
            'application-*.yml'
    ]) {
        expand(project.properties)
    }
}


dependencies {
    // spring boot
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE')

    // database
    runtimeOnly('com.h2database:h2')
    implementation('mysql:mysql-connector-java:8.0.13')

    // log
    implementation('io.sentry:sentry-logback:1.7.5')

    // util
    implementation('org.projectlombok:lombok:1.18.2')
    implementation('org.modelmapper:modelmapper:1.1.0')
    implementation('org.json:json:20180130')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.9.8')
    implementation('javax.validation:validation-api:2.0.1.Final')
    implementation('org.hibernate.validator:hibernate-validator:6.0.13.Final')

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation('org.springframework.security:spring-security-test')
}

/**
 * Build for AWS Beanstalk deploy zip file
 */
task buildForBeanstalk(type: Zip) {
    from "./"
    include "build/libs/${name}-${version}.jar"
    include 'Procfile'
    include '.ebextenstions/*'

    archiveName "${project.name}-${version}.zip"
    destinationDir(file("build/deploy"))
}
buildForBeanstalk.dependsOn build
